version: "3"
services:
  nginx:
    image: nginx
    restart: always
    container_name: nginx
    ports:
      - "8080:8080"
    depends_on:
      - backend-api
    volumes:
      - type: bind
        source: ./nginx/default.conf
        target: /etc/nginx/conf.d/default.conf
      - type: bind
        source: ./front
        target: /usr/src/front
      - ./nginx/entrypoint.sh:/docker-entrypoint.d/entrypoint.sh

  backend-api:
    container_name: backend-api
    restart: always
    build:
      context: ./back/express-api
      dockerfile:  Dockerfile
    depends_on:
      - postgres
      - redis
    volumes:
      - type: bind
        source : ./back/express-api
        target: /back/express-api
    ports:
      - "9000:9000"
    command: sh -c "cd /back/express-api && npm run start"

  postgres:
    image: postgres
    restart: always
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-volumes:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    container_name: redis
    ports:
        - "6379:6379"
    # deploy:
    #     resources:
    #       limits:
    #         memory: 100m

    # k8s:
  # elasticsearch:
volumes:
  postgres-volumes: